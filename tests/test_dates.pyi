# Stubs for psycopg2.tests.test_dates (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .testutils import ConnectingTestCase, skip_before_postgres, unittest
from typing import Any

def total_seconds(d: Any): ...

class CommonDatetimeTestsMixin:
    def execute(self, *args: Any): ...
    def test_parse_date(self) -> None: ...
    def test_parse_null_date(self) -> None: ...
    def test_parse_incomplete_date(self) -> None: ...
    def test_parse_time(self) -> None: ...
    def test_parse_null_time(self) -> None: ...
    def test_parse_incomplete_time(self) -> None: ...
    def test_parse_datetime(self) -> None: ...
    def test_parse_null_datetime(self) -> None: ...
    def test_parse_incomplete_datetime(self) -> None: ...
    def test_parse_null_interval(self) -> None: ...

class DatetimeTests(ConnectingTestCase, CommonDatetimeTestsMixin):
    curs: Any = ...
    DATE: Any = ...
    TIME: Any = ...
    DATETIME: Any = ...
    INTERVAL: Any = ...
    def setUp(self) -> None: ...
    def test_parse_bc_date(self) -> None: ...
    def test_parse_bc_datetime(self) -> None: ...
    def test_parse_time_microseconds(self) -> None: ...
    def test_parse_datetime_microseconds(self) -> None: ...
    def check_time_tz(self, str_offset: Any, offset: Any) -> None: ...
    def test_parse_time_timezone(self) -> None: ...
    def check_datetime_tz(self, str_offset: Any, offset: Any) -> None: ...
    def test_parse_datetime_timezone(self) -> None: ...
    def test_parse_time_no_timezone(self) -> None: ...
    def test_parse_datetime_no_timezone(self) -> None: ...
    def test_parse_interval(self) -> None: ...
    def test_parse_negative_interval(self) -> None: ...
    def test_parse_infinity(self) -> None: ...
    def test_adapt_date(self) -> None: ...
    def test_adapt_time(self) -> None: ...
    def test_adapt_datetime(self) -> None: ...
    def test_adapt_timedelta(self) -> None: ...
    def test_adapt_negative_timedelta(self) -> None: ...
    def test_type_roundtrip_date(self) -> None: ...
    def test_type_roundtrip_datetime(self) -> None: ...
    def test_type_roundtrip_datetimetz(self) -> None: ...
    def test_type_roundtrip_time(self) -> None: ...
    def test_type_roundtrip_timetz(self) -> None: ...
    def test_type_roundtrip_interval(self) -> None: ...
    def test_type_roundtrip_date_array(self) -> None: ...
    def test_type_roundtrip_datetime_array(self) -> None: ...
    def test_type_roundtrip_datetimetz_array(self) -> None: ...
    def test_type_roundtrip_time_array(self) -> None: ...
    def test_type_roundtrip_interval_array(self) -> None: ...
    def test_time_24(self) -> None: ...
    def test_large_interval(self) -> None: ...
    def test_micros_rounding(self) -> None: ...
    def test_interval_overflow(self): ...
    def test_adapt_infinity_tz(self) -> None: ...
    def test_redshift_day(self) -> None: ...
    def test_interval_iso_8601_not_supported(self) -> None: ...

class mxDateTimeTests(ConnectingTestCase, CommonDatetimeTestsMixin):
    curs: Any = ...
    DATE: Any = ...
    TIME: Any = ...
    DATETIME: Any = ...
    INTERVAL: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def test_parse_bc_date(self) -> None: ...
    def test_parse_bc_datetime(self) -> None: ...
    def test_parse_time_microseconds(self) -> None: ...
    def test_parse_datetime_microseconds(self) -> None: ...
    def test_parse_time_timezone(self) -> None: ...
    def test_parse_datetime_timezone(self) -> None: ...
    def test_parse_interval(self) -> None: ...
    def test_adapt_time(self) -> None: ...
    def test_adapt_datetime(self) -> None: ...
    def test_adapt_bc_datetime(self) -> None: ...
    def test_adapt_timedelta(self) -> None: ...
    def test_adapt_negative_timedelta(self) -> None: ...
    def test_type_roundtrip_date(self) -> None: ...
    def test_type_roundtrip_datetime(self) -> None: ...
    def test_type_roundtrip_time(self) -> None: ...
    def test_type_roundtrip_interval(self) -> None: ...
    def test_type_roundtrip_date_array(self) -> None: ...
    def test_type_roundtrip_datetime_array(self) -> None: ...
    def test_type_roundtrip_time_array(self) -> None: ...
    def test_type_roundtrip_interval_array(self) -> None: ...

class FromTicksTestCase(unittest.TestCase):
    def test_timestamp_value_error_sec_59_99(self) -> None: ...
    def test_date_value_error_sec_59_99(self) -> None: ...
    def test_time_value_error_sec_59_99(self) -> None: ...

class FixedOffsetTimezoneTests(unittest.TestCase):
    def test_init_with_no_args(self) -> None: ...
    def test_repr_with_positive_offset(self) -> None: ...
    def test_repr_with_negative_offset(self) -> None: ...
    def test_repr_with_name(self) -> None: ...
    def test_instance_caching(self) -> None: ...
    def test_pickle(self) -> None: ...

def test_suite(): ...
