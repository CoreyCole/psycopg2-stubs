# Stubs for psycopg2.tests.test_types_extras (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .testutils import ConnectingTestCase, decorate_all_tests, py3_raises_typeerror, skip_before_postgres, skip_if_no_uuid, slow, unittest
from typing import Any

class TypesExtrasTests(ConnectingTestCase):
    def execute(self, *args: Any): ...
    def testUUID(self) -> None: ...
    def testUUIDARRAY(self) -> None: ...
    def testINET(self) -> None: ...
    def testINETARRAY(self) -> None: ...
    def test_inet_conform(self) -> None: ...
    def test_adapt_fail(self) -> None: ...
    def test_point_array(self) -> None: ...

def skip_if_no_hstore(f: Any): ...

class HstoreTestCase(ConnectingTestCase):
    def test_adapt_8(self): ...
    def test_adapt_9(self): ...
    def test_parse(self) -> None: ...
    def test_register_conn(self) -> None: ...
    def test_register_curs(self) -> None: ...
    def test_register_unicode(self) -> None: ...
    def test_register_globally(self) -> None: ...
    def test_roundtrip(self) -> None: ...
    def test_roundtrip_unicode(self) -> None: ...
    def test_oid(self) -> None: ...
    def test_roundtrip_array(self) -> None: ...
    def test_array_cast(self) -> None: ...
    def test_array_cast_oid(self) -> None: ...
    def test_non_dbapi_connection(self) -> None: ...

def skip_if_no_composite(f: Any): ...

class AdaptTypeTestCase(ConnectingTestCase):
    def test_none_in_record(self) -> None: ...
    def test_none_fast_path(self): ...
    def test_tokenization(self) -> None: ...
    def test_cast_composite(self) -> None: ...
    def test_empty_string(self) -> None: ...
    def test_cast_nested(self) -> None: ...
    def test_register_on_cursor(self) -> None: ...
    def test_register_on_connection(self) -> None: ...
    def test_register_globally(self) -> None: ...
    def test_composite_namespace(self) -> None: ...
    def test_composite_array(self) -> None: ...
    def test_wrong_schema(self) -> None: ...
    def test_from_tables(self) -> None: ...
    def test_non_dbapi_connection(self) -> None: ...
    def test_subclass(self): ...

def skip_if_json_module(f: Any): ...
def skip_if_no_json_module(f: Any): ...
def skip_if_no_json_type(f: Any): ...

class JsonTestCase(ConnectingTestCase):
    def test_module_not_available(self) -> None: ...
    def test_customizable_with_module_not_available(self): ...
    def test_adapt(self) -> None: ...
    def test_adapt_dumps(self): ...
    def test_adapt_subclass(self): ...
    def test_register_on_dict(self) -> None: ...
    def test_type_not_available(self): ...
    def test_default_cast(self) -> None: ...
    def test_register_on_connection(self) -> None: ...
    def test_register_on_cursor(self) -> None: ...
    def test_register_globally(self) -> None: ...
    def test_loads(self): ...
    def test_no_conn_curs(self): ...
    def test_register_default(self): ...
    def test_null(self) -> None: ...
    def test_no_array_oid(self) -> None: ...
    def test_str(self) -> None: ...
    def test_scs(self) -> None: ...

def skip_if_no_jsonb_type(f: Any): ...

class JsonbTestCase(ConnectingTestCase):
    @staticmethod
    def myloads(s: Any): ...
    def test_default_cast(self) -> None: ...
    def test_register_on_connection(self) -> None: ...
    def test_register_on_cursor(self) -> None: ...
    def test_register_globally(self) -> None: ...
    def test_loads(self): ...
    def test_register_default(self): ...
    def test_null(self) -> None: ...

class RangeTestCase(unittest.TestCase):
    def test_noparam(self) -> None: ...
    def test_empty(self) -> None: ...
    def test_nobounds(self) -> None: ...
    def test_bounds(self) -> None: ...
    def test_keywords(self) -> None: ...
    def test_bad_bounds(self) -> None: ...
    def test_in(self) -> None: ...
    def test_nonzero(self) -> None: ...
    def test_eq_hash(self) -> None: ...
    def test_eq_wrong_type(self) -> None: ...
    def test_eq_subclass(self) -> None: ...
    def test_lt_ordering(self) -> None: ...
    def test_gt_ordering(self) -> None: ...
    def test_le_ordering(self) -> None: ...
    def test_ge_ordering(self) -> None: ...
    def test_pickling(self) -> None: ...

def skip_if_no_range(f: Any): ...

class RangeCasterTestCase(ConnectingTestCase):
    builtin_ranges: Any = ...
    def test_cast_null(self) -> None: ...
    def test_cast_empty(self) -> None: ...
    def test_cast_inf(self) -> None: ...
    def test_cast_numbers(self) -> None: ...
    def test_cast_date(self) -> None: ...
    def test_cast_timestamp(self) -> None: ...
    def test_cast_timestamptz(self) -> None: ...
    def test_adapt_number_range(self) -> None: ...
    def test_adapt_numeric_range(self) -> None: ...
    def test_adapt_date_range(self) -> None: ...
    def test_register_range_adapter(self) -> None: ...
    def test_range_escaping(self) -> None: ...
    def test_range_not_found(self) -> None: ...
    def test_schema_range(self) -> None: ...

def test_suite(): ...
